version: "3.8"

services:
  neo4j:
    image: neo4j:5.26.1
    # REMOVED user mapping to avoid data volume conflicts
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_server_default__advertised__address=${NEO4J_IP}
      # MEMORY CONFIGURATION - FIXES THE 716.8 MiB LIMIT ERROR
      - NEO4J_server_memory_heap_initial__size=2G
      - NEO4J_server_memory_heap_max__size=4G
      - NEO4J_server_memory_pagecache_size=2G
      - NEO4J_dbms_memory_transaction_total_max=2G
      # PERFORMANCE OPTIMIZATIONS FOR LARGE CPG IMPORTS
      - NEO4J_dbms_tx__log_rotation_retention__policy=1G size
      - NEO4J_dbms_checkpoint_interval_time=30m
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_allow__upgrade=true
      # BULK IMPORT OPTIMIZATIONS
      - NEO4J_dbms_read__only=false
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
    volumes:
      # Use named volume for data (avoids permission issues)
      - neo4j_data:/data
      # Only mount config/plugins if they exist and have content
      - ./src/neo4j/conf:/conf   
      - ./src/neo4j/plugins:/plugins
    ports:
      - "7474:7474"
      - "7687:7687"
    # CONTAINER MEMORY LIMITS
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 4G
    restart: unless-stopped

  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    environment:
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - NEO4J_HOST=neo4j
      - NEO4J_HTTP_PORT=7474
      - NEO4J_BOLT_PORT=7687
      - NEO4J_USER=neo4j
      - NEO4J_BROWSER_HOST=${NEO4J_IP}
      # JAVA MEMORY SETTINGS FOR CPG PROCESSING
      - JAVA_OPTS=-Xmx3g -Xms1g
    depends_on:
      - neo4j
    ports:
      - "8000:8000"
    # BACKEND MEMORY ALLOCATION
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    restart: unless-stopped

  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  neo4j_data: